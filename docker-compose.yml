version: '3'

services:
  # Ethereum Node - Fast dev chain with preloaded ETH
  ethereum:
    image: ethereum/client-go:stable
    container_name: ethereum-node
    command:
      - --dev
      - --http
      - --http.addr=0.0.0.0
      - --http.api=eth,net,web3,personal,miner,admin,debug,txpool
      - --http.corsdomain=*
      - --http.vhosts=*
      - --ws
      - --ws.addr=0.0.0.0
      - --ws.origins=*
      - --ws.api=eth,net,web3,personal,miner,admin,debug,txpool
      - --networkid=${NETWORK_ID}
      - --allow-insecure-unlock
      - --rpc.allow-unprotected-txs
    ports:
      - "${ETHEREUM_RPC_PORT}:8545"  # HTTP RPC
      - "${ETHEREUM_WS_PORT}:8546"  # WS RPC
    volumes:
      - geth-data:/root/.ethereum
      
  # Simple Block Explorer
  explorer:
    image: alethio/ethereum-lite-explorer:latest
    container_name: eth-explorer
    environment:
      - APP_NODE_URL=http://${HOST_IP}:${ETHEREUM_RPC_PORT}
    ports:
      - "${EXPLORER_PORT}:80"
    depends_on:
      - ethereum
      
  # Blockscout Explorer - Advanced explorer with smart contract interaction
  blockscout:
    image: blockscout/blockscout:latest
    container_name: blockscout-explorer
    restart: always
    depends_on:
      - ethereum
      - postgres
    environment:
      ETHEREUM_JSONRPC_VARIANT: 'geth'
      ETHEREUM_JSONRPC_HTTP_URL: http://ethereum:8545
      ETHEREUM_JSONRPC_WS_URL: ws://ethereum:8546
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/blockscout
      ECTO_USE_SSL: 'false'
      SECRET_KEY_BASE: "56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN"
      PORT: 4000
      COIN: "ETH"
      NETWORK: "${BLOCKSCOUT_NETWORK_NAME}"
      SUBNETWORK: "${BLOCKSCOUT_SUBNETWORK}"
      LOGO: "/images/blockscout_logo.svg"
      CHAIN_ID: ${NETWORK_ID}
    ports:
      - "${BLOCKSCOUT_PORT}:4000"
      
  # Database for Blockscout Explorer
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: blockscout
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  # Faucet - Web UI to distribute test ETH to students
  faucet:
    build:
      context: ./faucet
      dockerfile: Dockerfile
    container_name: eth-faucet
    environment:
      RPC_URL: http://ethereum:8545
      CHAIN_ID: ${NETWORK_ID}
      ETH_AMOUNT: "${ETH_AMOUNT}"
      FUND_PRIVATE_KEY: "${FUND_PRIVATE_KEY}"
      FUND_ADDRESS: "${FUND_ADDRESS}"
      FAUCET_NAME: "${FAUCET_NAME}"
      FAUCET_DESCRIPTION: "${FAUCET_DESCRIPTION}"
      EXPLORER_URL: "http://${HOST_IP}:${EXPLORER_PORT}"
      BLOCKSCOUT_URL: "http://${HOST_IP}:${BLOCKSCOUT_PORT}"
      CREATOR_NAME: "${CREATOR_NAME}"
      CREATOR_URL: "${CREATOR_URL}"
      ENABLE_HTTPS: "${ENABLE_HTTPS}"
    ports:
      - "${FAUCET_PORT}:3000"
    depends_on:
      - ethereum

  # HTTPS Proxy - Nginx proxy for HTTPS support
  https-proxy:
    image: nginx:alpine
    container_name: https-proxy
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/ssl:ro
    ports:
      - "${FAUCET_HTTPS_PORT}:443"
      - "${EXPLORER_HTTPS_PORT}:443"
      - "${BLOCKSCOUT_HTTPS_PORT}:443"
      - "${HTTPS_PORT}:443"
    depends_on:
      - ethereum
      - explorer
      - blockscout
      - faucet
    environment:
      - NGINX_HOST=${HOST_IP}
    command: >
      /bin/sh -c "
        if [ ! -f /etc/nginx/ssl/server.crt ]; then
          echo 'Error: SSL certificates not found. Please run generate-certs.sh or generate-certs.bat first.';
          exit 1;
        fi;
        nginx -g 'daemon off;'
      "

volumes:
  geth-data:
  postgres-data: 